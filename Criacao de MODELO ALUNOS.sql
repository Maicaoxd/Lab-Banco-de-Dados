CREATE DATABASE BD_ESCOLA;

USE BD_ESCOLA;

CREATE TABLE TB_ESTADO (
	SIGLA_ESTADO char(2),
	NOME_ESTADO varchar(40)
);

ALTER TABLE TB_ESTADO 
ADD CONSTRAINT PK_ESTADO 
PRIMARY KEY (SIGLA_ESTADO);

CREATE TABLE TB_CLASSE (
	ID_CLASSE smallint,
	ID_ANDAR smallint
);

ALTER TABLE TB_CLASSE 
ADD CONSTRAINT PK_CLASSE 
PRIMARY KEY (ID_CLASSE);

CREATE TABLE TB_PROFESSOR (
	ID_PROFESSOR char(3),
	NOME_PROFESSOR varchar(25)
);

ALTER TABLE TB_PROFESSOR 
ADD CONSTRAINT PK_PROFESSOR 
PRIMARY KEY (ID_PROFESSOR);

CREATE TABLE TB_ALUNO (
	COD_ALUNO smallint,
	NOME_ALUNO varchar(45),
	END_ALUNO varchar(100),
	SIGLA_ESTADO char(2),
	ID_CLASSE smallint
);

ALTER TABLE TB_ALUNO 
ADD CONSTRAINT PK_ALUNO 
PRIMARY KEY (COD_ALUNO);

ALTER TABLE TB_ALUNO 
ADD CONSTRAINT FK_TB_ALUNO_TB_ESTADO 
FOREIGN KEY (SIGLA_ESTADO) REFERENCES TB_ESTADO (SIGLA_ESTADO);

ALTER TABLE TB_ALUNO 
ADD CONSTRAINT FK_TB_ALUNO_TB_CLASSE 
FOREIGN KEY (ID_CLASSE) REFERENCES TB_CLASSE (ID_CLASSE);

CREATE TABLE TB_DISCIPLINA (
	ID_DISCIPLINA char(3),
	NOME_DISCIPLINA varchar(15),
	ID_PROFESSOR_DISCIPLINA CHAR(3),
	NOTA_MINIMA_DISCIPLINA smallint
);

ALTER TABLE TB_DISCIPLINA
ADD CONSTRAINT PK_DISCIPLINA
PRIMARY KEY (ID_DISCIPLINA);

ALTER TABLE TB_DISCIPLINA 
ADD CONSTRAINT FK_TB_DISCIPLINA_TB_PROFESSOR 
FOREIGN KEY (ID_PROFESSOR_DISCIPLINA) REFERENCES TB_PROFESSOR (ID_PROFESSOR);

CREATE TABLE TB_ALUNO_DISCIPLINA (
	COD_ALUNO smallint,
	ID_DISCIPLINA char(3),
	NOTA_ALUNO smallint
);

ALTER TABLE TB_ALUNO_DISCIPLINA 
ADD CONSTRAINT FK_TB_ALUNO_DISCIPLINA_TB_ALUNO 
FOREIGN KEY (COD_ALUNO) REFERENCES TB_ALUNO (COD_ALUNO);

ALTER TABLE TB_ALUNO_DISCIPLINA 
ADD CONSTRAINT FK_TB_ALUNO_DISCIPLINA_TB_DISCIPLINA
FOREIGN KEY (ID_DISCIPLINA) REFERENCES TB_DISCIPLINA (ID_DISCIPLINA);

SET FOREIGN_KEY_CHECKS = 0;

INSERT INTO TB_PROFESSOR (ID_PROFESSOR, NOME_PROFESSOR)
VALUES 
	('JOI', 'JOILSON CARDOSO'),
	('OSE', 'OSEAS SANTANA'),
	('VIT', 'VITOR VASCONCELOS'),
	('FER', 'JOSE ROBERTO FERROLI'),
	('LIM', 'VALMIR LIMA'),
	('EDS', 'EDSON SILVA'),
	('WAG', 'WAGNER OKIDA');	

INSERT INTO TB_CLASSE (ID_CLASSE, ID_ANDAR)
VALUES
	(1, 1),
	(2, 2),
	(3, 3);

INSERT INTO TB_ESTADO (SIGLA_ESTADO, NOME_ESTADO)
VALUES
	('SP', 'SÃO PAULO'),
	('PI', 'PIAUI');

INSERT INTO TB_ALUNO (COD_ALUNO, NOME_ALUNO, END_ALUNO, SIGLA_ESTADO, ID_CLASSE)
VALUES 
	(1, 'ANTONIO CARLOS PENTEADO', 'RUA X', 'SP', 1),
	(2, 'AUROMIR DA SILVA VALDEVINO', 'RUA W', 'SP', 1),
	(3, 'ANDRE COSTA', 'RUA T', 'SP', 1),
	(4, 'ROBERTO SOARES DE MENEZES', 'RUA BW', 'PI', 2),
	(5, 'DANIA', 'RUA CCC', 'SP', 2),
	(6, 'CARLOS MAGALHAES', 'AV SP', 'SP', 2),
	(7, 'MARCELO RAUBA', 'AV SAO LUIS', 'SP', 3),
	(8, 'FERNANDO', 'AV COUNTYR', 'SP', 3),
	(9, 'WALMIR BURIN', 'RUA SSISIS', 'PI', 3);
	
INSERT INTO TB_DISCIPLINA (ID_DISCIPLINA, NOME_DISCIPLINA, ID_PROFESSOR_DISCIPLINA, NOTA_MINIMA_DISCIPLINA)
VALUES 
	('MAT', 'MATEMATICA', 'JOI', 7),
	('POR', 'PORTUGUES', 'VIT', 5),
	('FIS', 'FISICA', 'OSE', 3),
	('HIS', 'HISTORIA', 'EDS', 2),
	('GEO', 'GEOGRAFIA', 'WAG', 4),
	('ING', 'INGLES', 'LIM', 2);
	
INSERT INTO TB_ALUNO_DISCIPLINA (COD_ALUNO, ID_DISCIPLINA, NOTA_ALUNO)
VALUES 
	(1, 'MAT', 0),
	(2, 'MAT', 0),
	(3, 'MAT', 1),
	(4, 'POR', 2),
	(5, 'POR', 2),
	(6, 'POR', 2),
	(7, 'FIS', 3),
	(8, 'FIS', 3),
	(9, 'FIS', 3),
	(1, 'POR', 2),
	(2, 'POR', 2),
	(7, 'POR', 2),
	(1, 'FIS', 3);
	
SET FOREIGN_KEY_CHECKS = 1;

-- UTILIZANDO O MODELO DE DADOS DE CURSO:

-- A - Exercícios de SELECT básico                              

-- 1). Queremos selecionar todos os alunos cadastrados.
SELECT * FROM TB_ALUNO;

-- 2). Queremos selecionar todos os nomes de disciplina,
-- cujo a nota mínima seja maior que 5 ( cinco ).
SELECT NOME_DISCIPLINA FROM TB_DISCIPLINA
WHERE NOTA_MINIMA_DISCIPLINA > 5;

-- 3). Queremos selecionar todas disciplinas que tenham
-- nota mínima entre 3 (três) e 5 (cinco).
SELECT * FROM TB_DISCIPLINA
WHERE NOTA_MINIMA_DISCIPLINA >= 3 AND NOTA_MINIMA_DISCIPLINA <= 5;

-- B-    Exercícios de SELECT (Ordenando e agrupando dados)

-- 1). Queremos selecionar todos os alunos em ordem alfabética de nome de aluno, e também o número da classe que estuda.
SELECT NOME_ALUNO, ID_CLASSE FROM TB_ALUNO
ORDER BY NOME_ALUNO ASC;

-- 2). Selecionaremos o item anterior, porém ordenado alfabeticamente pelo identificador do 
-- aluno de forma descendente  (ascendente é “default”).
SELECT NOME_ALUNO, ID_CLASSE FROM TB_ALUNO
ORDER BY CONVERT(COD_ALUNO, CHAR) DESC;

-- 3). Selecionaremos  todos os alunos que cursam as disciplinas de matemática E de português agrupados por aluno e disciplina.
SELECT * FROM TB_ALUNO_DISCIPLINA
WHERE ID_DISCIPLINA = 'MAT' AND
COD_ALUNO IN (
	SELECT COD_ALUNO FROM TB_ALUNO_DISCIPLINA
	WHERE ID_DISCIPLINA = 'POR'
)
GROUP BY COD_ALUNO, ID_DISCIPLINA;

-- C-    Exercícios de SELECT (Junção de Tabelas)

-- 1). Queremos selecionar todos os nomes de alunos que cursam Português ou Matemática.
SELECT NOME_ALUNO FROM TB_ALUNO
WHERE COD_ALUNO IN (
	SELECT COD_ALUNO FROM TB_ALUNO_DISCIPLINA
	WHERE ID_DISCIPLINA IN ('MAT', 'POR')
);

-- 2). Queremos selecionar todos os nomes de alunos cadastrados que cursam  a disciplina FÍSICA e seus respectivos endereços .
SELECT NOME_ALUNO, END_ALUNO FROM TB_ALUNO
WHERE COD_ALUNO IN (
	SELECT COD_ALUNO FROM TB_ALUNO_DISCIPLINA
	WHERE ID_DISCIPLINA = 'FIS'
);

-- 3). Queremos selecionar todos os nomes de alunos cadastrados que cursam física e o andar que se encontra a classe dos mesmos.
-- Preste atenção ao detalhe da concatenação de uma string "andar" junto à coluna do número do andar (Apenas para estética do resultado).
SELECT A.NOME_ALUNO, CONCAT('andar ', C.ID_ANDAR), D.NOME_DISCIPLINA 
FROM TB_ALUNO AS A
INNER JOIN TB_CLASSE AS C
ON C.ID_CLASSE = A.ID_CLASSE
INNER JOIN TB_ALUNO_DISCIPLINA AS AD
ON AD.COD_ALUNO = A.COD_ALUNO
INNER JOIN TB_DISCIPLINA AS D
ON D.ID_DISCIPLINA = AD.ID_DISCIPLINA
WHERE AD.ID_DISCIPLINA = 'FIS'

-- D- Exercícios de SELECT (OUTER JOIN)

-- 1. Selecionar todos os Professores com suas respectivas disciplinas e os demais Professores que não lecionam disciplina alguma.
SELECT  P.NOME_PROFESSOR, D.NOME_DISCIPLINA
FROM TB_PROFESSOR AS P
LEFT JOIN TB_DISCIPLINA AS D
ON P.ID_PROFESSOR = D.ID_PROFESSOR_DISCIPLINA

-- E- Exercícios de SELECT (USE Clausula IN e/ou SUBSelect).
-- Não pode usar junção.

-- 1. Selecionar todos os nomes de professores que tenham ministrado disciplina para alunos que sejam do Estado do Piaui,
-- cujo a classe tenha sido no terceiro andar.
SELECT P.NOME_PROFESSOR, A.NOME_ALUNO, E.NOME_ESTADO, C.ID_CLASSE
FROM TB_PROFESSOR AS P, TB_ALUNO AS A, TB_ESTADO AS E, TB_CLASSE AS C
WHERE P.ID_PROFESSOR IN (
	SELECT D.ID_PROFESSOR_DISCIPLINA FROM TB_DISCIPLINA AS D
	WHERE D.ID_DISCIPLINA IN (
		SELECT AD.ID_DISCIPLINA FROM TB_ALUNO_DISCIPLINA AS AD
		WHERE AD.COD_ALUNO IN (
			SELECT A.COD_ALUNO FROM TB_ALUNO
			WHERE A.SIGLA_ESTADO IN (
				SELECT E.SIGLA_ESTADO FROM TB_ESTADO
				WHERE E.SIGLA_ESTADO = 'PI'
			) AND A.ID_CLASSE IN (
				SELECT C.ID_CLASSE FROM TB_CLASSE
				WHERE C.ID_ANDAR = 3
			)
		)
	)
)